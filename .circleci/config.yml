# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
    node: circleci/node@5.0.0
    cypress: cypress-io/cypress@1.29.0
    codecov: codecov/codecov@3.2.2

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Jobs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

jobs:
    cypress-tests:
        docker:
            - image: cypress/base:14.16.0
              environment:
                  ## this enables colors in the output
                  TERM: xterm
        working_directory: ~/repo
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
                      - v1-deps-{{ .Branch }}
                      - v1-deps
            - run:
                  name: Install Dependencies
                  command: npm ci

            - save_cache:
                  key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
                  paths:
                      - ~/.npm
                      - ~/.cache

            # See https://support.circleci.com/hc/en-us/articles/360006773953-Race-Conditions-Wait-For-Database
            # This is to handle waiting on the server to start before I run cypress
            - run:
                name: Install Dockerize
                command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
                environment:
                    DOCKERIZE_VERSION: v0.3.0

            - run:
                  name: Build App
                  command: |
                      npm run build
                      touch .env
                      echo "MONGODB_URI=$MONGODB_URI" > .env
            - run:
                  name: Start server
                  command: npm run start & npx wait-on http://localhost:3000/

            - run:
                name: Wait for server
                command: dockerize -wait http://localhost:3000 -timeout 1m

            - run: $(npm bin)/cypress run
            - store_artifacts:
                  path: ~/repo/coverage

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Workflows ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
workflows:
    example-workflow:
        jobs:
            - node/test:
                  pkg-manager: npm
                  test-results-for: other
                  run-command: test:ci
                  post-steps:
                      - store_artifacts:
                            path: coverage
                      - codecov/upload
            - cypress-tests
